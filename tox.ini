[tox]
# desired label:
#   ci = py{,-json5,-pyjson5,-tomli}{,-format}"
#
# a tox issue will be filed to ask how this could be better supported
# for now, 'ci' is an expanded matrix:
labels =
  ci = py, py-format, py-json5, py-json5-format, py-pyjson5, py-pyjson5-format, py-tomli, py-tomli-format, coverage

envlist =
    cov_clean
    py{311,310,39,38,37}
    py{37,310}-tomli{,-format}
    py{37,311}-{json5,pyjson5}
    cov
skip_missing_interpreters = true
minversion = 4.0.0

[testenv]
description = "run tests with pytest"
usedevelop = true
extras = dev
deps =
    json5: json5
    pyjson5: pyjson5
    tomli: tomli
    format: jsonschema[format]
commands = coverage run -m pytest {posargs}
depends =
    py{,37,38,39,310,311}{,-json5,-pyjson5,-tomli}: cov_clean
    cov: py{,37,38,39,310,311}{,-json5,-pyjson5,-tomli}

[testenv:cov_clean]
description = "erase coverage data to prepare for a new run"
deps = coverage
skip_install = true
commands = coverage erase

[testenv:cov]
description = "combine and report coverage data"
deps = coverage
skip_install = true
commands_pre = coverage combine
commands = coverage report --skip-covered

[testenv:mypy]
description = "check type annotations with mypy"
deps = mypy
       types-jsonschema
       types-requests
commands = mypy src/ {posargs}

[testenv:docs]
description = "build docs with sphinx"
basepython = python3.10
extras = docs
allowlist_externals = rm
changedir = docs/
# clean the build dir before rebuilding
commands_pre = rm -rf _build/
commands = sphinx-build -d _build/doctrees -b dirhtml -W . _build/dirhtml {posargs}

[testenv:twine-check]
description = "check the metadata on a package build"
skip_install = true
deps = twine
       build
allowlist_externals = rm
commands_pre = rm -rf dist/
# check that twine validating package data works
commands = python -m build
           twine check dist/*

[testenv:vendor-schemas]
description = "update the vendored schemas"
deps = pre-commit
commands = python ./scripts/vendor-schemas.py

[testenv:generate-hooks-config]
description = "update autogenerated pre-commit hooks"
commands = python ./scripts/generate-hooks-config.py

[testenv:publish-release]
description = "build and publish to pypi"
skip_install = true
deps = twine
       build
# clean the build dir before rebuilding
allowlist_externals = rm
commands_pre = rm -rf dist/
commands = python -m build
           twine upload dist/*

[pytest]
filterwarnings = error
